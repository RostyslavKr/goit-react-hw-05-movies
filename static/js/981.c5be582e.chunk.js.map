{"version":3,"file":"static/js/981.c5be582e.chunk.js","mappings":"4QAGaA,GAAWC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,sEAKRE,EAAoBF,EAAAA,EAAAA,IAAH,kIAMjBG,EAAUH,EAAAA,EAAAA,IAAH,uEAKPI,EAAgBJ,EAAAA,EAAAA,IAAH,0CAGbK,EAAqBL,EAAAA,EAAAA,IAAH,oFAIlBM,EAAYN,EAAAA,EAAAA,GAAH,8DAKTO,EAAQP,EAAAA,EAAAA,EAAH,sFAMLQ,EAAaR,EAAAA,EAAAA,OAAH,yE,2BCpBjBS,EAAe,SAAC,GAAe,IAAD,IAAZC,EAAY,EAAZA,MACtB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAS7C,OARAC,EAAAA,EAAAA,YAAU,WCvBY,IAAAC,KDwBXP,ECvBJQ,MAAM,sCAAD,OAC4BD,EAD5B,6DAEVE,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,wBACjC,KDgBmBN,MAAK,SAAAO,GACrBnB,EAASmB,GACTjB,EAAUiB,EAAMlB,OACjB,IACDJ,EAAMM,EACP,GAAE,CAACN,EAAOM,KAGT,4BACE,SAACjB,EAAD,CAAUkC,GAAIf,EAAd,UACE,UAACV,EAAD,CAAY0B,KAAK,SAAjB,WACE,SAAC,MAAD,IADF,gBAKF,UAAChC,EAAD,WACGU,EAAUuB,aACT,gBACEC,IAAG,0CAAqCxB,EAAUuB,aAClDE,IAAKzB,EAAU0B,MACfC,MAAO,IACPC,OAAQ,OAGV,gBAAKJ,IAAKK,EAAOJ,IAAKzB,EAAU0B,MAAOC,MAAO,IAAKC,OAAQ,OAG7D,UAACrC,EAAD,YACE,SAACG,EAAD,UAAYM,EAAU0B,SACtB,wCAAgBI,KAAKC,MAAO,GAAY/B,EAAUgC,cAAlD,QACA,sCACA,uBAAIhC,EAAUiC,YACd,oCACA,SAACzC,EAAD,UACGU,EAAOgC,KAAI,gBAAGC,EAAH,EAAGA,KAAMxB,EAAT,EAASA,GAAT,OACV,SAAChB,EAAD,UAAiBwC,GAALxB,EADF,aAMlB,UAAClB,EAAD,YACE,oDACA,2BACE,yBACE,SAACN,EAAD,CAAUkC,GAAG,OAAOb,MAAO,CAAEC,KAAMH,GAAnC,qBAIF,yBACE,SAACnB,EAAD,CAAUkC,GAAG,UAAUb,MAAO,CAAEC,KAAMH,GAAtC,8BAON,SAAC,KAAD,MAGL,EACDT,EAAauC,WAAa,CACxBtC,MAAOuC,IAAAA,MAET,O","sources":["pages/MovieDetalis.styled.jsx","pages/MovieDetails.jsx","service/getMovie.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const LinkBack = styled(Link)`\n  display: inline;\n  text-decoration: none;\n`;\n\nexport const WrapperAboutMovie = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding-bottom: 10px;\n  border-bottom: 1px solid black;\n`;\nexport const Wrapper = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n`;\n\nexport const WrapperGenres = styled.div`\n  display: flex;\n`;\nexport const WrapperInformation = styled.div`\n  padding-bottom: 10px;\n  border-bottom: 1px solid black;\n`;\nexport const TitleFilm = styled.h1`\n  font-size: 50px;\n  margin-top: 0;\n`;\n\nexport const Genre = styled.p`\n  margin-right: 10px;\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n\nexport const BackButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n`;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { getMovie } from 'service/getMovie';\nimport {\n  WrapperAboutMovie,\n  Wrapper,\n  WrapperGenres,\n  TitleFilm,\n  Genre,\n  WrapperInformation,\n  BackButton,\n  LinkBack,\n} from './MovieDetalis.styled';\nimport { ImArrowLeft2 } from 'react-icons/im';\nimport image from 'image/no_image.jpg';\n\nconst MovieDetails = ({ getId }) => {\n  const [movieDesc, setMovie] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  useEffect(() => {\n    getMovie(movieId).then(movie => {\n      setMovie(movie);\n      setGenres(movie.genres);\n    });\n    getId(movieId);\n  }, [getId, movieId]);\n\n  return (\n    <div>\n      <LinkBack to={backLinkHref}>\n        <BackButton type=\"button\">\n          <ImArrowLeft2 />\n          Go back\n        </BackButton>\n      </LinkBack>\n      <WrapperAboutMovie>\n        {movieDesc.poster_path ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${movieDesc.poster_path}`}\n            alt={movieDesc.title}\n            width={220}\n            height={350}\n          />\n        ) : (\n          <img src={image} alt={movieDesc.title} width={150} height={250} />\n        )}\n\n        <Wrapper>\n          <TitleFilm>{movieDesc.title}</TitleFilm>\n          <p>User Score: {Math.round((100 / 10) * movieDesc.vote_average)}%</p>\n          <h2>Overview</h2>\n          <p>{movieDesc.overview}</p>\n          <h3>Genres</h3>\n          <WrapperGenres>\n            {genres.map(({ name, id }) => (\n              <Genre key={id}>{name}</Genre>\n            ))}\n          </WrapperGenres>\n        </Wrapper>\n      </WrapperAboutMovie>\n      <WrapperInformation>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <LinkBack to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </LinkBack>\n          </li>\n          <li>\n            <LinkBack to=\"reviews\" state={{ from: backLinkHref }}>\n              Reviews\n            </LinkBack>\n          </li>\n        </ul>\n      </WrapperInformation>\n\n      <Outlet />\n    </div>\n  );\n};\nMovieDetails.propsTypes = {\n  getId: PropTypes.func,\n};\nexport default MovieDetails;\n","export const getMovie = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=fc2d7a6ee96a44a9df3bfa9e129c2a94&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Something went wrong'));\n  });\n};\n"],"names":["LinkBack","styled","Link","WrapperAboutMovie","Wrapper","WrapperGenres","WrapperInformation","TitleFilm","Genre","BackButton","MovieDetails","getId","useState","movieDesc","setMovie","genres","setGenres","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","id","fetch","then","response","ok","json","Promise","reject","Error","movie","to","type","poster_path","src","alt","title","width","height","image","Math","round","vote_average","overview","map","name","propsTypes","PropTypes"],"sourceRoot":""}